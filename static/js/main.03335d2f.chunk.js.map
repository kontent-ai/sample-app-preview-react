{"version":3,"sources":["constants/routePaths.ts","utils/routeTransitionUtils.ts","enums/LoadingStatus.ts","enums/PollingStatus.ts","components/ErrorPage.tsx","repositories/contentItemRepository.ts","context/AppContext.tsx","components/NavigationBar.tsx","components/PageContent.tsx","components/Product/ProductDetailsPage.tsx","constants/resources.ts","components/Product/ProductCard.tsx","components/Product/ProductsPage.tsx","components/WelcomePage.tsx","components/ProgressBar.tsx","App.tsx","authentication/authOptions.ts","authentication/WebAuth.ts","constants/localStorageKeys.ts","components/Loading.tsx","context/AuthContext.tsx","utils/ajax.ts","utils/restProvider.ts","repositories/previewApiKeyRepository.ts","factories/createLoadPreviewApiKey.ts","utils/projectIdUtil.ts","context/AppContextInitialization.tsx","factories/createLoadApplicationData.ts","index.tsx"],"names":["DeployedProjectRootRoute","process","CallbackRoute","ProjectRoute","ProductsRoute","ProductDetailsRoute","buildPath","route","params","compile","LoadingStatus","PollingStatus","ErrorPageType","deliveryClient","ensureDeliveryClient","projectId","previewApiKey","createDeliveryClient","proxy","basePreviewUrl","defaultQueryConfig","usePreviewMode","globalHeaders","_queryConfig","header","value","packageInfo","name","version","propertyNameResolver","camelCasePropertyNameResolver","getAllArticles","Error","items","type","toPromise","then","response","data","catch","reason","console","log","Array","getProductsPage","getProductDetailsByUrlSlug","urlPattern","equalsFilter","defaultAppContext","dataLoadingStatus","NotLoaded","dataPollingStatus","Stopped","previewApiKeyLoadingStatus","projectIdLoadingStatus","articles","productsByUrlSlug","loadWelcomePage","loadProduct","loadProducts","getProducts","setProjectId","setLoadingStatus","setProjectIdLoadingStatus","setPreviewApiKey","setPreviewApiKeyLoadingStatus","AppContext","React","createContext","AppContextProvider","Provider","AppContextConsumer","Consumer","AppContextComponent","state","_dataPollingInterval","_startDataPolling","callback","clearInterval","setInterval","a","setState","Fetching","Waiting","loadingStatus","_loadWelcomePageData","_loadProductsData","productsPage","newProducts","elements","productList","linkedItems","reduce","byId","product","url","Object","assign","_loadProductData","productUrlSlug","values","this","contextValue","props","children","PureComponent","NavigationBar","appContext","className","activeClassName","exact","to","PageContent","title","ProductDetailsPage","init","pictureUrl","image","alt","src","dangerouslySetInnerHTML","__html","description","ProductDetailsPageConnected","match","productImagePlaceholderUrl","ProductCardPlaceholder","imageSource","ProductCard","productId","ProductsPage","products","isSingleProduct","length","classNames","map","key","system","id","ProductsPageConnected","WelcomePage","article","body","WelcomePageConnected","ProgressBar","context","useContext","useState","visible","setVisible","useEffect","timeoutId","window","setTimeout","clearTimeout","App","path","component","render","authOptions","domain","clientID","audience","redirectUri","responseType","scope","logoutOptions","returnTo","WebAuth","webAuth","auth0","login","authorize","silentLogin","localStorage","setItem","location","pathname","prompt","logout","getRedirectUri","redirectUriFromStorage","getItem","removeItem","startsWith","slice","handleAuthentication","onSuccessLogin","onFailedLogin","parseHash","err","authResult","accessToken","idToken","expiresAt","expiresIn","Date","getTime","isAuthenticated","Loading","defaultAuthContext","isLoggedIn","AuthContextProvider","AuthContextConsumer","AuthContext","isAuthUrlHash","hash","test","handleAuthCallback","history","push","warn","from","Component","AuthContextWithRouter","withRouter","projectIdUrlTemplate","MissingProjectIdErrorPageContent","UnableToGetPreviewApiKeyErrorPageContent","ErrorPage","MissingProjectId","UnableToGetPreviewApiKey","addCustomHeaders","request","customHeaders","keys","forEach","setRequestHeader","getNewEmptyRequest","XMLHttpRequest","parseResponse","responseText","JSON","parse","restProvider","ajax","makeRequest","httpVerb","requestContext","headers","defaultHeaders","newHeaders","authToken","Authorization","appInstanceId","getHeaders","requestBody","stringify","prepareDataForSend","post","validStatusCodes","indexOf","status","createRestProvider","withCredentials","Promise","resolve","open","onreadystatechange","readyState","send","requestFile","upload","formData","uploadProgressCallback","addEventListener","createAjaxWithCredentials","getPreviewApiKey","createLoadPreviewApiKey","authContext","api_key","getProjectIdFromUrl","routeToMatch","matchPath","AppContextInitialization","loadApplicationData","Failed","Finished","AppContextInitializationWithRouter","deps","loadPreviewApikey","projectIdFromUrl","InProgress","every","ReactDOM","basename","document","getElementById"],"mappings":"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","file":"static/js/main.03335d2f.chunk.js","sourcesContent":["const uuidPattern = '[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}';\n\nexport const DeployedProjectRootRoute = `${process.env.REACT_APP_PROJECT_ROUTE}`;\n\nexport const RootRoute = '/';\nexport const CallbackRoute = `${RootRoute}callback`;\n\nexport const ProjectRoute = `${RootRoute}:projectId(${uuidPattern})`;\nexport const ProductsRoute = `${ProjectRoute}/products`;\nexport const ProductDetailsRoute = `${ProductsRoute}/:productUrlSlug`;\n\nexport type ProjectRouteParams = {\n  readonly projectId: string;\n};\n\nexport type ProductDetailsRouteParams = ProjectRouteParams & {\n  readonly productUrlSlug: string;\n}\n","import { compile } from \"path-to-regexp\";\n\ninterface IDictionary<T> {\n  readonly [key: string]: T | undefined;\n}\n\nexport function buildPath<TRouteParams = IDictionary<string>>(route: string, params: TRouteParams): string {\n  return compile(route)(params as any as object);\n}\n","export enum LoadingStatus {\n  NotLoaded = 'notLoaded',\n  InProgress = 'inProgress',\n  Finished = 'finished',\n  Failed = 'failed',\n}\n","export enum PollingStatus {\n  Stopped = 'Stopped',\n  Fetching = 'Fetching',\n  Waiting = 'Waiting',\n}\n","import React from 'react';\n\nexport enum ErrorPageType {\n  MissingProjectId = 'missingProjectId',\n  UnableToGetPreviewApiKey = 'unableToGetPreviewApiKey',\n}\n\ninterface IErrorPageProps {\n  readonly type: ErrorPageType;\n}\n\nconst projectIdUrlTemplate = \"https://kentico.github.io/kontent-sample-app-preview-react/<your_project_id>\";\n\nconst MissingProjectIdErrorPageContent: React.FunctionComponent = () => (\n  <p>Didn't you forget to provide Project Id in the url? E.g. <i>{projectIdUrlTemplate}</i></p>\n);\n\nconst UnableToGetPreviewApiKeyErrorPageContent: React.FunctionComponent = () => (\n  <>\n    <p>There was problem retrieving Preview Api Key.</p>\n    <p>Did you provide correct Project Id? E.g. <i>{projectIdUrlTemplate}</i></p>\n  </>\n);\n\nexport const ErrorPage: React.FunctionComponent<IErrorPageProps> = ({ type }) => (\n  <>\n    <div className=\"navigation-bar\">\n      <nav className=\"navigation-bar__app-menu\"/>\n    </div>\n\n    <p>Ooops, there was some error!</p>\n    {type === ErrorPageType.MissingProjectId && (\n      <MissingProjectIdErrorPageContent/>\n    )}\n\n    {type === ErrorPageType.UnableToGetPreviewApiKey && (\n      <UnableToGetPreviewApiKeyErrorPageContent/>\n    )}\n  </>\n);\n\n","import { ArticleExampleContentType } from \"../models/article_example_content_type\";\nimport { camelCasePropertyNameResolver, createDeliveryClient, IDeliveryClient} from \"@kentico/kontent-delivery\";\nimport { LandingPageExampleContentType } from \"../models/landing_page_example_content_type\";\nimport { ProductExampleContentType } from \"../models/product_example_content_type\";\nimport packageInfo from \"../../package.json\";\n\nlet deliveryClient: IDeliveryClient | null = null;\n\nconst sourceTrackingHeaderName = \"X-KC-SOURCE\";\n\nconst ensureDeliveryClient = (projectId: string, previewApiKey: string): void => {\n  if (deliveryClient) {\n    return;\n  }\n\n  deliveryClient = createDeliveryClient({\n    previewApiKey,\n    projectId: projectId,\n    proxy: {\n      basePreviewUrl: process.env.REACT_APP_DELIVER_URL,\n    },\n    defaultQueryConfig: {\n      usePreviewMode: true\n    },\n    globalHeaders: (_queryConfig) => [\n      {\n        header: sourceTrackingHeaderName,\n        value: `${packageInfo.name};${packageInfo.version}`,\n      },\n    ],\n    propertyNameResolver: camelCasePropertyNameResolver\n  });\n};\n\n\nexport const getAllArticles = (projectId: string, previewApiKey: string): Promise<Array<ArticleExampleContentType>> => {\n  ensureDeliveryClient(projectId, previewApiKey);\n  if (!deliveryClient) {\n    throw new Error('Delivery client is not initialized yet');\n  }\n\n  return deliveryClient.items<ArticleExampleContentType>()\n    .type('article_example_content_type')\n    .toPromise()\n    .then(response => {\n      return response.data.items;\n    })\n    .catch(reason => {\n      console.log(reason);\n      return new Array<ArticleExampleContentType>();\n    });\n};\n\nexport const getProductsPage = (projectId: string, previewApiKey: string): Promise<Array<LandingPageExampleContentType>> => {\n  ensureDeliveryClient(projectId, previewApiKey);\n  if (!deliveryClient) {\n    throw new Error('Delivery client is not initialized yet');\n  }\n\n  return deliveryClient.items<LandingPageExampleContentType>()\n    .type('landing_page_example_content_type')\n    .toPromise()\n    .then(response => {\n      return response.data.items;\n    })\n    .catch(reason => {\n      console.log(reason);\n      return new Array<LandingPageExampleContentType>();\n    });\n};\n\nexport const getProductDetailsByUrlSlug = (projectId: string, previewApiKey: string, urlPattern: string): Promise<ProductExampleContentType | undefined | void> => {\n  ensureDeliveryClient(projectId, previewApiKey);\n  if (!deliveryClient) {\n    throw new Error('Delivery client is not initialized yet');\n  }\n\n  return deliveryClient.items<ProductExampleContentType>()\n    .type('product_example_content_type')\n    .equalsFilter('elements.url', urlPattern)\n    .toPromise()\n    .then(response => {\n      return response.data.items[0];\n    })\n    .catch(reason => {\n      console.log(reason);\n    })\n};\n","import React from 'react';\nimport { clearInterval, setInterval } from 'timers';\nimport { LoadingStatus } from '../enums/LoadingStatus';\nimport { PollingStatus } from '../enums/PollingStatus';\nimport { ArticleExampleContentType } from '../models/article_example_content_type';\nimport { ProductExampleContentType } from '../models/product_example_content_type';\nimport { getAllArticles, getProductsPage, getProductDetailsByUrlSlug } from '../repositories/contentItemRepository';\n\ninterface IAppContextState {\n  readonly dataLoadingStatus: LoadingStatus;\n  readonly dataPollingStatus: PollingStatus;\n  readonly previewApiKey: string;\n  readonly previewApiKeyLoadingStatus: LoadingStatus;\n  readonly projectId: string;\n  readonly projectIdLoadingStatus: LoadingStatus;\n  readonly articles: Array<ArticleExampleContentType>;\n  readonly productsByUrlSlug: {[key: string]: ProductExampleContentType};\n}\n\ninterface IAppContextProps {\n  readonly loadWelcomePage: () => void;\n  readonly loadProduct: (productUrlSlug: string) => void;\n  readonly loadProducts: () => void;\n  readonly getProducts: () => Array<ProductExampleContentType>;\n  readonly setProjectId: (projectId: string) => void;\n  readonly setLoadingStatus: (loadingStatus: LoadingStatus) => void;\n  readonly setProjectIdLoadingStatus: (projectIdLoadingStatus: LoadingStatus) => void;\n  readonly setPreviewApiKey: (previewApiKey: string) => void;\n  readonly setPreviewApiKeyLoadingStatus: (previewApiKeyLoadingStatus: LoadingStatus) => void;\n}\n\nexport interface IAppContext extends IAppContextState, IAppContextProps {\n}\n\nconst defaultAppContext: IAppContext = {\n  dataLoadingStatus: LoadingStatus.NotLoaded,\n  dataPollingStatus: PollingStatus.Stopped,\n  previewApiKey: '',\n  previewApiKeyLoadingStatus: LoadingStatus.NotLoaded,\n  projectId: '',\n  projectIdLoadingStatus: LoadingStatus.NotLoaded,\n  articles: new Array<ArticleExampleContentType>(),\n  productsByUrlSlug: {},\n  loadWelcomePage: () => undefined,\n  loadProduct: () => undefined,\n  loadProducts: () => undefined,\n  getProducts: () => [],\n  setProjectId: () => undefined,\n  setLoadingStatus: () => undefined,\n  setProjectIdLoadingStatus: () => undefined,\n  setPreviewApiKey: () => undefined,\n  setPreviewApiKeyLoadingStatus: () => undefined,\n};\n\nexport const AppContext = React.createContext<IAppContext>(defaultAppContext);\nconst AppContextProvider = AppContext.Provider;\nexport const AppContextConsumer = AppContext.Consumer;\n\nexport class AppContextComponent extends React.PureComponent<{}, IAppContextState> {\n\n  readonly state = {\n    dataLoadingStatus: LoadingStatus.NotLoaded,\n    dataPollingStatus: PollingStatus.Stopped,\n    previewApiKey: '',\n    previewApiKeyLoadingStatus: LoadingStatus.NotLoaded,\n    projectId: '',\n    projectIdLoadingStatus: LoadingStatus.NotLoaded,\n    articles: new Array<ArticleExampleContentType>(),\n    productsByUrlSlug: {},\n  };\n\n  private _dataPollingInterval: NodeJS.Timer | null = null;\n\n  private _startDataPolling = (callback: () => void): void => {\n    if (this._dataPollingInterval !== null) {\n      clearInterval(this._dataPollingInterval);\n    }\n\n    this._dataPollingInterval = setInterval(async () => {\n      this.setState({ dataPollingStatus: PollingStatus.Fetching });\n      await callback();\n      this.setState({ dataPollingStatus: PollingStatus.Waiting });\n    }, 3000);\n    this.setState({ dataPollingStatus: PollingStatus.Waiting });\n  };\n\n  setProjectId = (projectId: string) => {\n    this.setState({ projectId });\n  };\n\n  setLoadingStatus = (loadingStatus: LoadingStatus) => {\n    this.setState({ dataLoadingStatus: loadingStatus });\n  };\n\n  setProjectIdLoadingStatus = (projectIdLoadingStatus: LoadingStatus) => {\n    this.setState({ projectIdLoadingStatus });\n  };\n\n  setPreviewApiKey = (previewApiKey: string) => {\n    this.setState({ previewApiKey });\n  };\n\n  setPreviewApiKeyLoadingStatus = (previewApiKeyLoadingStatus: LoadingStatus) => {\n    this.setState({ previewApiKeyLoadingStatus });\n  };\n\n  private _loadWelcomePageData = async () => {\n    const articles = await getAllArticles(this.state.projectId, this.state.previewApiKey);\n    this.setState({ articles });\n  };\n\n  loadWelcomePage = async () => {\n    this._startDataPolling(this._loadWelcomePageData);\n    await this._loadWelcomePageData();\n  };\n\n  private _loadProductsData = async () => {\n    const productsPage = await getProductsPage(this.state.projectId, this.state.previewApiKey);\n    if (productsPage && productsPage[0]) {\n      const newProducts = productsPage[0].elements.productList.linkedItems as Array<ProductExampleContentType>;\n      this.setState((state) => ({ productsByUrlSlug: newProducts\n          .reduce((byId, product: ProductExampleContentType) => ({...byId, [product.elements.url.value]: product}),\n            Object.assign({}, state.productsByUrlSlug))\n      }));\n    }\n  };\n\n  loadProducts = async () => {\n    this._startDataPolling(this._loadProductsData);\n    await this._loadProductsData();\n  };\n\n  private _loadProductData = async (productUrlSlug: string) => {\n    const product = await getProductDetailsByUrlSlug(this.state.projectId, this.state.previewApiKey, productUrlSlug);\n    if (product) {\n      this.setState((state) => ({ productsByUrlSlug: ({...Object.assign({}, state.productsByUrlSlug), [product.elements.url.value]: product})}));\n    }\n  };\n\n  loadProduct = async (productUrlSlug: string) => {\n    this._startDataPolling(() => this._loadProductData(productUrlSlug));\n    await this._loadProductData(productUrlSlug);\n  };\n\n  getProducts = (): Array<ProductExampleContentType> => Object.values(this.state.productsByUrlSlug);\n\n  render() {\n    const {\n      productsByUrlSlug,\n      articles,\n      projectId,\n      dataLoadingStatus,\n      dataPollingStatus,\n      projectIdLoadingStatus,\n      previewApiKey,\n      previewApiKeyLoadingStatus,\n    } = this.state;\n\n    const contextValue: IAppContext = {\n      dataLoadingStatus,\n      dataPollingStatus,\n      previewApiKey,\n      previewApiKeyLoadingStatus,\n      projectId,\n      projectIdLoadingStatus,\n      articles,\n      productsByUrlSlug,\n      loadWelcomePage: this.loadWelcomePage,\n      loadProduct: this.loadProduct,\n      loadProducts: this.loadProducts,\n      getProducts: this.getProducts,\n      setProjectId: this.setProjectId,\n      setLoadingStatus: this.setLoadingStatus,\n      setProjectIdLoadingStatus: this.setProjectIdLoadingStatus,\n      setPreviewApiKey: this.setPreviewApiKey,\n      setPreviewApiKeyLoadingStatus: this.setPreviewApiKeyLoadingStatus,\n    };\n\n    return (\n      <AppContextProvider value={contextValue}>\n        {this.props.children}\n      </AppContextProvider>\n    );\n  }\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './NavigationBar.css';\nimport {\n  ProductsRoute,\n  ProjectRoute,\n  ProjectRouteParams,\n} from '../constants/routePaths';\nimport { buildPath } from \"../utils/routeTransitionUtils\";\nimport { AppContextConsumer } from \"../context/AppContext\";\n\nexport class NavigationBar extends React.PureComponent {\n  render() {\n    return (\n      <AppContextConsumer>\n        {appContext => (\n          <div className=\"navigation-bar\">\n            <nav className=\"navigation-bar__app-menu\">\n              <NavLink\n                activeClassName=\"navigation-bar__app-menu-button--active\"\n                className=\"navigation-bar__app-menu-button\"\n                exact={true}\n                to={buildPath<ProjectRouteParams>(ProjectRoute, { projectId: appContext.projectId })}\n              >\n                Welcome\n              </NavLink>\n\n              <NavLink\n                activeClassName=\"navigation-bar__app-menu-button--active\"\n                className=\"navigation-bar__app-menu-button\"\n                to={buildPath<ProjectRouteParams>(ProductsRoute, { projectId: appContext.projectId })}\n              >\n                Products\n              </NavLink>\n            </nav>\n          </div>\n        )}\n      </AppContextConsumer>\n    )\n  }\n}\n\n","import React from 'react';\nimport './PageContent.css';\n\nexport interface IPageContentProps {\n  readonly title: string;\n}\n\nexport const PageContent: React.FunctionComponent<IPageContentProps> = ({ title, children }) => (\n  <>\n    <div className=\"app-title\">\n      {title}\n    </div>\n    <div className=\"app-content\">\n      {children}\n    </div>\n  </>\n);\n","import React from 'react';\nimport {\n  AppContextConsumer,\n} from '../../context/AppContext';\nimport './ProductDetailsPage.css';\nimport './Testimonial.css';\nimport { ProductDetailsRouteParams } from \"../../constants/routePaths\";\nimport { ProductExampleContentType } from \"../../models/product_example_content_type\";\nimport { PageContent } from \"../PageContent\";\n\ninterface IProductDetailsPage {\n  readonly product: ProductExampleContentType;\n  readonly init: () => void;\n}\n\nclass ProductDetailsPage extends React.PureComponent<IProductDetailsPage> {\n  componentDidMount(): void {\n    this.props.init();\n  }\n\n  render() {\n    const { product } = this.props;\n    if (product) {\n      const pictureUrl = product.elements.image.value[0] ? product.elements.image.value[0].url : '';\n      return (\n        <PageContent title={product.elements.name.value}>\n          {pictureUrl && (\n            <img\n              className=\"product-details__image\"\n              alt={product.elements.name.value}\n              src={product.elements.image.value[0] ? product.elements.image.value[0].url : ''}\n            />\n          )}\n\n          <div\n            className=\"product-details__description\"\n            dangerouslySetInnerHTML={{ __html: product.elements.description.value }}\n          />\n        </PageContent>);\n    }\n\n    return <p>There's no such product</p>;\n  }\n}\n\ninterface IProductDetailsPageConnectedProps {\n  readonly match: {\n    readonly params: ProductDetailsRouteParams;\n  };\n}\n\nconst ProductDetailsPageConnected: React.FunctionComponent<IProductDetailsPageConnectedProps> = ({ match }) => (\n  <AppContextConsumer>\n    {appContext => (\n      <ProductDetailsPage\n        product={appContext.productsByUrlSlug[match.params.productUrlSlug]}\n        init={() => appContext.loadProduct(match.params.productUrlSlug)}\n      />\n    )}\n  </AppContextConsumer>\n);\n\nexport { ProductDetailsPageConnected as ProductDetailsPage }\n","export const productImagePlaceholderUrl = `${process.env.REACT_APP_PROJECT_DOMAIN}${process.env.REACT_APP_PROJECT_ROUTE}/placeholder-images.png`;\n","import { Link } from \"react-router-dom\";\nimport { buildPath } from \"../../utils/routeTransitionUtils\";\nimport { ProductDetailsRoute, ProductDetailsRouteParams } from \"../../constants/routePaths\";\nimport React from \"react\";\nimport './ProductCard.css';\nimport { productImagePlaceholderUrl } from \"../../constants/resources\";\n\ninterface IProductCardPlaceholderProps {\n  readonly imageSource: string;\n  readonly title: string;\n}\n\nconst ProductCardPlaceholder: React.FunctionComponent<IProductCardPlaceholderProps> = ({ imageSource, title }) => (\n  <>\n    <div className=\"product-card__thumbnail-wrapper\">\n      <img\n        className=\"product-card__thumbnail\"\n        src={imageSource}\n        alt=\"product thumbnail\"\n      />\n    </div>\n    {title ? title : 'Untitled content item'}\n  </>\n);\n\ninterface IProductCardProps {\n  readonly projectId: string;\n  readonly productId: string;\n  readonly title: string;\n  readonly pictureUrl: string;\n}\n\nexport const ProductCard: React.FunctionComponent<IProductCardProps> =\n  ({ projectId, productId, pictureUrl, title }) => {\n    const imageSource = pictureUrl ? pictureUrl : productImagePlaceholderUrl;\n    return (\n      <div className=\"product-card\">\n        {productId ? (\n            <Link to={buildPath<ProductDetailsRouteParams>(ProductDetailsRoute, { projectId, productUrlSlug: productId })}>\n              <ProductCardPlaceholder imageSource={imageSource} title={title}/>\n            </Link>\n          ) : (\n            <ProductCardPlaceholder imageSource={imageSource} title={title}/>\n          )}\n      </div>\n    );\n  };\n","import React from 'react';\nimport { AppContextConsumer } from '../../context/AppContext';\nimport { PageContent } from '../PageContent';\nimport './ProductsPage.css';\nimport { ProductExampleContentType } from \"../../models/product_example_content_type\";\nimport { ProductCard } from \"./ProductCard\";\nimport classNames from \"classnames\";\n\ninterface IProductsPageProps {\n  readonly init: () => void;\n  readonly projectId: string;\n  readonly products: Array<ProductExampleContentType>;\n}\n\nclass ProductsPage extends React.PureComponent<IProductsPageProps> {\n  componentDidMount(): void {\n    this.props.init();\n  }\n\n  render() {\n    const { projectId, products } = this.props;\n    const isSingleProduct = products.length === 1;\n    return (\n      <PageContent title=\"Products\">\n        <div className={classNames(\"products-page\", {\n          \"products-page--has-single-product\": isSingleProduct,\n        })}>\n          {products && products.map((product: ProductExampleContentType) => (\n            <ProductCard\n              title={product.elements.name.value}\n              pictureUrl={product.elements.image.value[0] ? product.elements.image.value[0].url : ''}\n              productId={product.elements.url.value}\n              projectId={projectId}\n              key={product.system.id}\n            />)\n          )}\n        </div>\n      </PageContent>\n    );\n  }\n}\n\nconst ProductsPageConnected = () => (\n  <AppContextConsumer>\n    {appContext => (\n      <ProductsPage\n        init={appContext.loadProducts}\n        projectId={appContext.projectId}\n        products={appContext.getProducts()}\n      />\n    )}\n  </AppContextConsumer>\n);\n\nexport { ProductsPageConnected as ProductsPage };\n","import React from 'react';\nimport { AppContextConsumer } from '../context/AppContext';\nimport { PageContent } from './PageContent';\nimport { ArticleExampleContentType } from \"../models/article_example_content_type\";\n\ninterface IWelcomePageProps {\n  readonly article: ArticleExampleContentType;\n  readonly init: () => void;\n}\n\nclass WelcomePage extends React.PureComponent<IWelcomePageProps> {\n  componentDidMount(): void {\n    this.props.init();\n  }\n\n  render() {\n    const { article } = this.props;\n    if (article) {\n      return (\n        <PageContent title={article.elements.title.value}>\n          <div dangerouslySetInnerHTML={{ __html: article.elements.body.value }} />\n        </PageContent>\n      );\n    }\n\n    return <p>Missing data for Welcome page</p>;\n  }\n}\n\nconst WelcomePageConnected = () => (\n  <AppContextConsumer>\n    {appContext => (\n      <WelcomePage\n        article={appContext.articles[0]}\n        init={appContext.loadWelcomePage} />\n    )}\n  </AppContextConsumer>\n);\n\nexport { WelcomePageConnected as WelcomePage }\n","import React, { useContext, useEffect, useState } from 'react';\nimport { AppContext } from '../context/AppContext';\nimport { PollingStatus } from '../enums/PollingStatus';\nimport './ProgressBar.css';\n\nexport const ProgressBar: React.FC = () => {\n  const context = useContext(AppContext);\n  const [visible, setVisible] = useState<boolean>(false);\n\n  useEffect(() => {\n    let timeoutId: number = 0;\n    if (context.dataPollingStatus === PollingStatus.Fetching) {\n      setVisible(true);\n    } else if (visible) {\n      timeoutId = window.setTimeout(() => {\n        setVisible(false);\n      }, 1000);\n    }\n\n    return () => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n    };\n  }, [context.dataPollingStatus, visible]);\n\n\n  return visible\n    ? <div className=\"progress-bar\"/>\n    : null;\n};\n","import React from 'react';\nimport './App.css';\nimport { Route, Switch } from 'react-router-dom';\nimport { NavigationBar } from './components/NavigationBar';\nimport { ProductDetailsPage } from './components/Product/ProductDetailsPage';\nimport { ProductsPage } from './components/Product/ProductsPage';\nimport { ProductDetailsRoute, ProductsRoute, ProjectRoute } from './constants/routePaths';\nimport { WelcomePage } from './components/WelcomePage';\nimport { ProgressBar } from './components/ProgressBar';\n\nexport class App extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"app\">\n        <ProgressBar/>\n        <Route\n          path={ProjectRoute}\n          component={NavigationBar}\n        />\n        <div className=\"app__content-wrapper\">\n          <Switch>\n            <Route\n              path={ProjectRoute}\n              exact\n              component={WelcomePage}\n            />\n            <Route\n              path={ProductDetailsRoute}\n              component={ProductDetailsPage}\n            />\n            <Route\n              path={ProductsRoute}\n              component={ProductsPage}\n            />\n            <Route\n              render={() => (\n                <p>Ooops, missing page!</p>\n              )}\n            />\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n","import {\n  AuthOptions,\n  LogoutOptions,\n} from 'auth0-js';\n\nexport const authOptions: AuthOptions = {\n  domain: process.env.REACT_APP_AUTH_DOMAIN!,\n  clientID: process.env.REACT_APP_AUTH_CLIENT_ID!,\n  audience: 'https://app.kenticocloud.com/',\n  redirectUri: process.env.REACT_APP_AUTH_REDIRECT_URL,\n  responseType: 'token id_token',\n  scope: 'openid',\n};\n\nexport const logoutOptions: LogoutOptions = {\n  returnTo: process.env.REACT_APP_AUTH_LOGOUT_RETURN_TO,\n};\n","import auth0 from 'auth0-js';\nimport {\n  authOptions,\n  logoutOptions,\n} from './authOptions';\nimport { Auth0RedirectUriStorageKey } from \"../constants/localStorageKeys\";\nimport { RootRoute, DeployedProjectRootRoute } from \"../constants/routePaths\";\n\nexport interface IAccessToken {\n  readonly accessToken: string;\n  readonly expiresAt: number;\n}\n\nexport interface IWebAuth {\n  readonly login: () => void;\n  readonly logout: () => void;\n  readonly silentLogin: () => void;\n  readonly handleAuthentication: (onSuccessLogin: (accessToken: IAccessToken, redirectUri: string) => void, onFailedLogin: () => void) => void;\n  readonly isAuthenticated: (expiresIn: number) => boolean;\n}\n\nexport class WebAuth implements IWebAuth {\n  private webAuth = new auth0.WebAuth(authOptions);\n\n  login = (): void => {\n    this.webAuth.authorize();\n  };\n\n  silentLogin = (): void => {\n    localStorage.setItem(Auth0RedirectUriStorageKey, window.location.pathname);\n    this.webAuth.authorize({\n      prompt: 'none',\n    });\n  };\n\n  logout = (): void => {\n    this.webAuth.logout(logoutOptions);\n  };\n\n  private getRedirectUri = () => {\n    const redirectUriFromStorage = localStorage.getItem(Auth0RedirectUriStorageKey);\n    localStorage.removeItem(Auth0RedirectUriStorageKey);\n    const redirectUri = redirectUriFromStorage ? redirectUriFromStorage : RootRoute;\n\n    // todo make nicer\n    if (redirectUri.startsWith(DeployedProjectRootRoute)) {\n      return redirectUri.slice(DeployedProjectRootRoute.length + 1);\n    }\n\n    return redirectUri;\n  };\n\n  handleAuthentication = (onSuccessLogin: (accessToken: IAccessToken, redirectUri: string) => void, onFailedLogin: () => void): void => {\n    this.webAuth.parseHash((err, authResult) => {\n      if (authResult && authResult.accessToken && authResult.idToken) {\n        const accessToken: IAccessToken = {\n          accessToken: authResult.accessToken as string,\n          expiresAt: ((authResult.expiresIn || 0) * 1000) + new Date().getTime(),\n        };\n        const redirectUri = this.getRedirectUri();\n        onSuccessLogin(accessToken, redirectUri);\n      }\n      else if (err) {\n        onFailedLogin();\n        this.login();\n      }\n    });\n  };\n\n  isAuthenticated = (expiresAt: number): boolean => {\n    // Check whether the current time is past the access token's expiry time\n    return new Date().getTime() < expiresAt;\n  };\n}\n","export const Auth0RedirectUriStorageKey = 'redirectUri';\n","import React from 'react';\n\nexport const Loading = (): JSX.Element => {\n    return (\n      <div>\n        <h1>Loading...</h1>\n      </div>\n    );\n};\n","import React from 'react';\nimport { IAccessToken, WebAuth } from \"../authentication/WebAuth\";\nimport { Redirect, Route, RouteComponentProps, Switch, withRouter } from \"react-router\";\nimport { Loading } from \"../components/Loading\";\nimport { CallbackRoute, RootRoute } from \"../constants/routePaths\";\n\ninterface IAuthContextState {\n  readonly accessToken: string;\n  readonly expiresAt: number;\n  readonly isLoggedIn: boolean;\n}\n\nexport interface IAuthContext extends IAuthContextState {\n  readonly logout: () => void;\n}\n\nconst defaultAuthContext: IAuthContext = {\n  accessToken: '',\n  expiresAt: 0,\n  isLoggedIn: false,\n  logout: () => undefined,\n};\n\nconst context = React.createContext<IAuthContext>(defaultAuthContext);\nconst AuthContextProvider = context.Provider;\nexport const AuthContextConsumer = context.Consumer;\n\nclass AuthContext extends React.Component<RouteComponentProps, IAuthContextState> {\n\n  private webAuth = new WebAuth();\n\n  constructor(props: RouteComponentProps) {\n    super(props);\n\n    this.state = {\n      accessToken: '',\n      isLoggedIn: false,\n      expiresAt: 0,\n    };\n  }\n\n  private isAuthUrlHash = (hash: string): boolean => /access_token|id_token|error/.test(hash);\n\n  handleAuthCallback = ({ location }: any) => {\n    if (this.isAuthUrlHash(location.hash)) {\n      this.webAuth.handleAuthentication(this.onSuccessLogin, this.onFailedLogin);\n    }\n  };\n\n  onSuccessLogin = (accessToken: IAccessToken, redirectUri: string) => {\n    this.setState({\n      accessToken: accessToken.accessToken,\n      expiresAt: accessToken.expiresAt,\n      isLoggedIn: true,\n    });\n    this.props.history.push(redirectUri);\n  };\n\n  onFailedLogin = () => {\n    console.warn('on failed login');\n  };\n\n  componentDidMount() {\n    const {silentLogin} = this.webAuth;\n    if (!this.isAuthUrlHash(window.location.hash)) {\n      silentLogin();\n    }\n  }\n\n  render() {\n    const context: IAuthContext = {\n      ...this.state,\n      logout: this.webAuth.logout,\n    };\n\n    const { isLoggedIn } = this.state;\n\n    return (\n      <Switch>\n        {isLoggedIn ?\n          <Redirect\n            from={CallbackRoute}\n            to={RootRoute}\n          /> :\n          <Route\n            path={CallbackRoute}\n            render={props => {\n              this.handleAuthCallback(props);\n              return <Loading />;\n            }}\n          />\n        }\n\n        {isLoggedIn && (\n          <Route render={() => (\n            <AuthContextProvider value={context}>\n              {this.props.children}\n            </AuthContextProvider>\n          )}/>\n        )}\n      </Switch>\n    )\n  }\n}\n\nconst AuthContextWithRouter = withRouter(AuthContext);\nexport { AuthContextWithRouter as AuthContext };\n","export type CustomHeaders = {\n  [key: string]: string,\n};\n\nexport type RequestType =\n  'GET'\n  | 'POST'\n  | 'PUT'\n  | 'DELETE'\n  | 'PATCH';\n\nexport type ProgressCallback = (event: {\n  loaded: number;\n  total: number;\n}) => void;\n\nexport interface ICreateAjax {\n  request: (type: RequestType, url: string, data: any, customHeaders?: CustomHeaders) => Promise<XMLHttpRequest>;\n  requestFile: (type: RequestType, url: string, data: any, customHeaders?: CustomHeaders) => Promise<XMLHttpRequest>;\n  upload: (url: string, formData: FormData, uploadProgressCallback: ProgressCallback, customHeaders?: CustomHeaders) => Promise<XMLHttpRequest>;\n}\n\nfunction createAjax(withCredentials: any): ICreateAjax {\n  return {\n    /**\n     * Attempts to parse the response as JSON otherwise returns it untouched.\n     *\n     * @param {string} type The HTTP verb to be used.\n     * @param {string} url The url for the XHR request.\n     * @param {object} data Optional. The data to be passed with a POST or PUT request.\n     * @param {object} customHeaders Optional. Custom headers to be included in a request.\n     *\n     * @memberof ajax\n     */\n    request(type: RequestType, url: string, data: any, customHeaders?: CustomHeaders): Promise<XMLHttpRequest> {\n      return new Promise<XMLHttpRequest>(resolve => {\n        const request = getNewEmptyRequest();\n\n        request.open(type, url, true);\n        request.withCredentials = withCredentials;\n\n        addCustomHeaders(request, customHeaders);\n\n        request.onreadystatechange = () => {\n          if (request.readyState === 4) {\n            resolve(request);\n          }\n        };\n\n        request.send(data);\n      });\n    },\n\n    requestFile(type: RequestType, url: string, data: any, customHeaders?: CustomHeaders): Promise<XMLHttpRequest> {\n      return new Promise<XMLHttpRequest>(resolve => {\n        const request = getNewEmptyRequest();\n\n        request.open(type, url, true);\n        request.responseType = 'blob';\n        request.withCredentials = withCredentials;\n\n        addCustomHeaders(request, customHeaders);\n\n        request.onreadystatechange = () => {\n          if (request.readyState === 4) {\n            resolve(request);\n          }\n        };\n\n        request.send(data);\n      });\n    },\n\n    upload(url: string, formData: FormData, uploadProgressCallback: ProgressCallback, customHeaders?: CustomHeaders): Promise<XMLHttpRequest> {\n      return new Promise(resolve => {\n        const request = getNewEmptyRequest();\n\n        request.open('POST', url, true);\n\n        addCustomHeaders(request, customHeaders);\n\n        request.onreadystatechange = () => {\n          if (request.readyState === 4) {\n            resolve(request);\n          }\n        };\n\n        request.upload.addEventListener('progress', uploadProgressCallback);\n        request.send(formData);\n      });\n    },\n  };\n}\n\nfunction addCustomHeaders(request: XMLHttpRequest, customHeaders?: CustomHeaders) {\n  if (customHeaders) {\n    Object.keys(customHeaders).forEach((header) => {\n      const value = customHeaders[header];\n      if (header && value) {\n        request.setRequestHeader(header, value);\n      }\n    });\n  }\n}\n\nfunction getNewEmptyRequest(): XMLHttpRequest {\n  // if (XMLHttpRequest) {\n  return new XMLHttpRequest();\n  // }\n  // else {\n  //   // Set ajax to correct XHR type. Source: https://gist.github.com/jed/993585\n  //   return new XMLHttpRequest();\n  //   //return new ActiveXObject('MSXML2.XMLHTTP.3.0');\n  // }\n}\n\nexport function createAjaxWithCredentials(): ICreateAjax {\n  return createAjax(true);\n}\n\n// export function createAjaxWithoutCredentials(): ICreateAjax {\n//   return createAjax(false);\n// }\n","import { RequestType } from './ajax';\n\nexport interface IRequestContext {\n  readonly appInstanceId?: string;\n  readonly authToken?: string;\n}\n\nexport type CustomHeaders = {\n  [key: string]: string,\n};\n\n\nfunction getAuthHeader(accessToken: string): CustomHeaders {\n  return { Authorization: `Bearer ${accessToken}` };\n}\n\nfunction getHeaders(defaultHeaders: CustomHeaders, requestContext?: IRequestContext): CustomHeaders {\n  if (!requestContext) {\n    return defaultHeaders;\n  }\n\n  const newHeaders = requestContext.authToken ? getAuthHeader(requestContext.authToken) : {};\n\n  if (requestContext.appInstanceId) {\n    newHeaders['X-AppInstanceId'] = requestContext.appInstanceId;\n  }\n\n  return { ...defaultHeaders, ...newHeaders };\n}\n\nexport function createRestProvider(ajax: any) {\n  function makeRequest(httpVerb: RequestType, url: string, data: any, requestContext?: IRequestContext): Promise<XMLHttpRequest> {\n    const headers = getHeaders(\n      { 'Content-type': 'application/json' },\n      requestContext,\n    );\n\n    const requestBody = data ? prepareDataForSend(data) : null;\n    return ajax.request(httpVerb, url, requestBody, headers);\n  }\n\n  return {\n    post(url: string, data: any, requestContext?: IRequestContext): Promise<any> {\n      return makeRequest('POST', url, data, requestContext)\n        .then(verifyStatusCode([200, 201]))\n        .then(parseResponse);\n    },\n  };\n}\n\nfunction prepareDataForSend(data: any): any {\n  if (data && typeof data === 'object') {\n    // const dto = toDTO(data);\n    // return JSON.stringify(dto);\n  }\n  else if (typeof data === 'string') {\n    return JSON.stringify(data);\n  }\n\n  return data;\n}\n\nfunction verifyStatusCode(validStatusCodes: number[]) {\n  return (response: XMLHttpRequest) => {\n    if (validStatusCodes.indexOf(response.status) >= 0) {\n      return response;\n    }\n    else {\n      throw response;\n    }\n  };\n}\n\nfunction parseResponse(response: XMLHttpRequest) {\n  // it might be empty string which can't be parsed by JSON.parse\n  if (!response.responseText) {\n    return null;\n  }\n  return JSON.parse(response.responseText);\n}\n","import { createAjaxWithCredentials } from '../utils/ajax';\nimport {\n  createRestProvider,\n  IRequestContext,\n} from '../utils/restProvider';\n\nconst restProvider = createRestProvider(createAjaxWithCredentials());\n\nexport interface IPreviewApiKey {\n  readonly api_key: string;\n  readonly expiresAt: string;\n}\n\nexport const getPreviewApiKey = (authToken: string, projectId: string): Promise<IPreviewApiKey> => {\n  const requestContext: IRequestContext = {\n    authToken: authToken,\n  };\n  const url = `${process.env.REACT_APP_KENTICO_CLOUD_URL}/api/project-management/${projectId}/keys/preview-delivery-api-primary`;\n  return restProvider.post(url, null, requestContext);\n};\n","import { IAppContext } from \"../context/AppContext\";\nimport { IAuthContext } from \"../context/AuthContext\";\nimport { IPreviewApiKey } from \"../repositories/previewApiKeyRepository\";\n\ninterface ILoadPreviewApiKeyDeps {\n  readonly appContext: IAppContext;\n  readonly authContext: IAuthContext;\n  readonly getPreviewApiKey: (authToken: string, projectId: string) => Promise<IPreviewApiKey>;\n}\n\nexport const createLoadPreviewApiKey = (props: ILoadPreviewApiKeyDeps): () => Promise<string | null> => {\n  const { accessToken } = props.authContext;\n  const { projectId } = props.appContext;\n  return () => props.getPreviewApiKey(accessToken, projectId)\n    .then((response: IPreviewApiKey) => {\n      return response.api_key;\n    })\n    .catch(() => {\n      return null;\n    })\n};\n","import { matchPath } from \"react-router\";\nimport { DeployedProjectRootRoute, ProjectRoute, ProjectRouteParams } from \"../constants/routePaths\";\n\nexport const getProjectIdFromUrl = (): string | null => {\n  if (window.location) {\n    const routeToMatch = DeployedProjectRootRoute + ProjectRoute + \"*\";\n    const match = matchPath<ProjectRouteParams>(window.location.pathname, routeToMatch);\n    if (match) {\n      return match.params.projectId;\n    }\n  }\n\n  console.warn('no projectId in url');\n  return null;\n};\n","import React from 'react';\nimport { RouteComponentProps, withRouter } from \"react-router\";\nimport { AuthContextConsumer, IAuthContext } from \"./AuthContext\";\nimport { AppContextConsumer, IAppContext } from \"./AppContext\";\nimport { Loading } from \"../components/Loading\";\nimport { ErrorPage, ErrorPageType } from \"../components/ErrorPage\";\nimport { getPreviewApiKey } from \"../repositories/previewApiKeyRepository\";\nimport { LoadingStatus } from \"../enums/LoadingStatus\";\nimport { createLoadApplicationData } from \"../factories/createLoadApplicationData\";\nimport { createLoadPreviewApiKey } from \"../factories/createLoadPreviewApiKey\";\nimport { getProjectIdFromUrl } from \"../utils/projectIdUtil\";\n\ninterface IAppContextInitializationProps extends RouteComponentProps {\n  readonly authContext: IAuthContext;\n  readonly appContext: IAppContext;\n  readonly loadApplicationData: () => void;\n}\n\nclass AppContextInitialization extends React.PureComponent<IAppContextInitializationProps, {}> {\n\n  componentDidUpdate(): void {\n    this.props.loadApplicationData();\n  }\n\n  render() {\n    const { projectIdLoadingStatus, previewApiKeyLoadingStatus, dataLoadingStatus } = this.props.appContext;\n    if (projectIdLoadingStatus === LoadingStatus.Failed) {\n      return <ErrorPage type={ErrorPageType.MissingProjectId}/>\n    }\n\n    if (previewApiKeyLoadingStatus === LoadingStatus.Failed) {\n      return <ErrorPage type={ErrorPageType.UnableToGetPreviewApiKey}/>\n    }\n\n    if (dataLoadingStatus === LoadingStatus.Finished) {\n      return this.props.children;\n    }\n\n    return <Loading/>\n  }\n}\n\nconst AppContextInitializationConnected = (props: RouteComponentProps) => (\n  <AppContextConsumer>\n    {appContext => (\n      <AuthContextConsumer>\n        {authContext => {\n          const loadApplicationData = createLoadApplicationData({\n            appContext,\n            getProjectIdFromUrl,\n            loadPreviewApikey: createLoadPreviewApiKey({\n              authContext,\n              appContext,\n              getPreviewApiKey,\n            })\n          });\n\n          return (\n            <AppContextInitialization\n              loadApplicationData={loadApplicationData}\n              authContext={authContext}\n              appContext={appContext}\n              {...props}\n          />);\n        }}\n      </AuthContextConsumer>\n    )}\n  </AppContextConsumer>\n);\n\nconst AppContextInitializationWithRouter = withRouter(AppContextInitializationConnected);\nexport { AppContextInitializationWithRouter as AppContextInitialization };\n","import { IAppContext } from \"../context/AppContext\";\nimport { LoadingStatus } from \"../enums/LoadingStatus\";\n\ninterface ILoadApplicationDataDeps {\n  readonly appContext: IAppContext;\n  readonly loadPreviewApikey: () => Promise<string | null>;\n  readonly getProjectIdFromUrl: () => string | null;\n}\n\nexport const createLoadApplicationData = (deps: ILoadApplicationDataDeps) => async (): Promise<void> => {\n  const { appContext, loadPreviewApikey, getProjectIdFromUrl } = deps;\n\n  if (appContext.dataLoadingStatus === LoadingStatus.Finished) {\n    return;\n  }\n\n  if (appContext.projectIdLoadingStatus === LoadingStatus.NotLoaded) {\n    const projectIdFromUrl = getProjectIdFromUrl();\n    if (projectIdFromUrl) {\n      appContext.setProjectId(projectIdFromUrl);\n      appContext.setProjectIdLoadingStatus(LoadingStatus.Finished);\n    } else {\n      appContext.setProjectIdLoadingStatus(LoadingStatus.Failed);\n    }\n  }\n\n  if (appContext.projectIdLoadingStatus === LoadingStatus.Finished && appContext.previewApiKeyLoadingStatus === LoadingStatus.NotLoaded) {\n    appContext.setPreviewApiKeyLoadingStatus(LoadingStatus.InProgress);\n    const previewApiKey = await loadPreviewApikey();\n    if (previewApiKey) {\n      appContext.setPreviewApiKey(previewApiKey);\n      appContext.setPreviewApiKeyLoadingStatus(LoadingStatus.Finished);\n    }\n    else {\n      appContext.setPreviewApiKeyLoadingStatus(LoadingStatus.Failed);\n    }\n  }\n\n  const requiredDataLoaded = [\n    appContext.previewApiKeyLoadingStatus,\n    appContext.projectIdLoadingStatus,\n  ].every(status => status === LoadingStatus.Finished);\n\n  if (requiredDataLoaded) {\n    appContext.setLoadingStatus(LoadingStatus.Finished);\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { AppContextComponent } from './context/AppContext';\nimport { AuthContext } from './context/AuthContext';\nimport { AppContextInitialization } from './context/AppContextInitialization';\nimport { DeployedProjectRootRoute } from './constants/routePaths';\n\nReactDOM.render(\n  <Router basename={DeployedProjectRootRoute}>\n    <AuthContext>\n      <AppContextComponent>\n        <AppContextInitialization>\n          <App/>\n        </AppContextInitialization>\n      </AppContextComponent>\n    </AuthContext>\n  </Router>\n  , document.getElementById('root'));\n"],"sourceRoot":""}